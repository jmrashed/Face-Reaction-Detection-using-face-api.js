{"version":3,"sources":["app.js"],"names":["detectionModel","faceapi","SsdMobilenetv1","expressionModel","nets","ssdMobilenetv1","Promise","all","loadFromUri","then","video","document","getElementById","navigator","mediaDevices","getUserMedia","stream","srcObject","play","addEventListener","canvas","createCanvasFromMedia","body","appendChild","displaySize","width","height","matchDimensions","setInterval","detectAllFaces","withFaceExpressions","detections","resizedDetections","resizeResults","getContext","clearRect","draw","drawDetections","drawFaceExpressions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAMA,iBAAiBC,QAAQC,cAA/B;AACA,IAAMC,kBAAkBF,QAAQG,IAAR,CAAaC,cAArC;;AAEA;AACAC,QAAQC,GAAR,CAAY,CACVP,eAAeQ,WAAf,CAA2B,UAA3B,CADU,EAEVL,gBAAgBK,WAAhB,CAA4B,UAA5B,CAFU,CAAZ,EAGGC,IAHH,CAGQ,YAAM;AACZ;AACA,MAAMC,QAAQC,SAASC,cAAT,CAAwB,OAAxB,CAAd;AACAC,YAAUC,YAAV,CAAuBC,YAAvB,CAAoC,EAAEL,OAAO,IAAT,EAApC,EAAqDD,IAArD,CAA0D,UAACO,MAAD,EAAY;AACpEN,UAAMO,SAAN,GAAkBD,MAAlB;AACAN,UAAMQ,IAAN;AACD,GAHD;;AAKA;AACAR,QAAMS,gBAAN,CAAuB,MAAvB,EAA+B,YAAM;AACnC,QAAMC,SAASnB,QAAQoB,qBAAR,CAA8BX,KAA9B,CAAf;AACAC,aAASW,IAAT,CAAcC,WAAd,CAA0BH,MAA1B;AACA,QAAMI,cAAc,EAAEC,OAAOf,MAAMe,KAAf,EAAsBC,QAAQhB,MAAMgB,MAApC,EAApB;AACAzB,YAAQ0B,eAAR,CAAwBP,MAAxB,EAAgCI,WAAhC;AACAI,wEAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACe3B,QAAQ4B,cAAR,CAAuBnB,KAAvB,EAA8B,IAAIV,cAAJ,EAA9B,EAAoD8B,mBAApD,EADf;;AAAA;AACJC,wBADI;AAEJC,+BAFI,GAEgB/B,QAAQgC,aAAR,CAAsBF,UAAtB,EAAkCP,WAAlC,CAFhB;;AAGVJ,qBAAOc,UAAP,CAAkB,IAAlB,EAAwBC,SAAxB,CAAkC,CAAlC,EAAqC,CAArC,EAAwCf,OAAOK,KAA/C,EAAsDL,OAAOM,MAA7D;AACAzB,sBAAQmC,IAAR,CAAaC,cAAb,CAA4BjB,MAA5B,EAAoCY,iBAApC;AACA/B,sBAAQmC,IAAR,CAAaE,mBAAb,CAAiClB,MAAjC,EAAyCY,iBAAzC;;AALU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ,IAMG,GANH;AAOD,GAZD;AAaD,CAzBD","file":"app.085cd0e9.map","sourceRoot":"..\\models","sourcesContent":["// Load the necessary libraries and models\r\nconst detectionModel = faceapi.SsdMobilenetv1;\r\nconst expressionModel = faceapi.nets.ssdMobilenetv1;\r\n\r\n// Load the models\r\nPromise.all([\r\n  detectionModel.loadFromUri('./models'),\r\n  expressionModel.loadFromUri('./models'),\r\n]).then(() => {\r\n  // Start capturing the video feed\r\n  const video = document.getElementById('video');\r\n  navigator.mediaDevices.getUserMedia({ video: true }).then((stream) => {\r\n    video.srcObject = stream;\r\n    video.play();\r\n  });\r\n\r\n  // Detect faces and expressions\r\n  video.addEventListener('play', () => {\r\n    const canvas = faceapi.createCanvasFromMedia(video);\r\n    document.body.appendChild(canvas);\r\n    const displaySize = { width: video.width, height: video.height };\r\n    faceapi.matchDimensions(canvas, displaySize);\r\n    setInterval(async () => {\r\n      const detections = await faceapi.detectAllFaces(video, new detectionModel()).withFaceExpressions();\r\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n      canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\r\n      faceapi.draw.drawDetections(canvas, resizedDetections);\r\n      faceapi.draw.drawFaceExpressions(canvas, resizedDetections);\r\n    }, 100);\r\n  });\r\n});\r\n"]}